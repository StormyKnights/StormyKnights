var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","bishop","chessboardscontroller","chessboardshelper","game","gamescontroller","gameshelper","king","knight","pawn","piece","piecescontroller","pieceshelper","queen","rook","user","userscontroller","usershelper","can_castle?()","castling()","check_path()","create()","in_check?()","index()","king_valid_move_for_in_check?()","move_to!()","new()","obstructed?()","occupied?()","piece_class()","populate_board!()","show()","show()","show()","update()","update()","valid_move?()","valid_move?()","valid_move?()","valid_move?()","valid_move?()","valid_move?()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","bishop","chessboardscontroller","chessboardshelper","game","gamescontroller","gameshelper","king","knight","pawn","piece","piecescontroller","pieceshelper","queen","rook","user","userscontroller","usershelper","king#can_castle?()","king#castling()","piece#check_path()","gamescontroller#create()","game#in_check?()","chessboardscontroller#index()","king#king_valid_move_for_in_check?()","piece#move_to!()","gamescontroller#new()","piece#obstructed?()","piece#occupied?()","pieceshelper#piece_class()","game#populate_board!()","gamescontroller#show()","piecescontroller#show()","userscontroller#show()","gamescontroller#update()","piecescontroller#update()","bishop#valid_move?()","king#valid_move?()","knight#valid_move?()","pawn#valid_move?()","queen#valid_move?()","rook#valid_move?()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Bishop","","Bishop.html","",""],["ChessboardsController","","ChessboardsController.html","",""],["ChessboardsHelper","","ChessboardsHelper.html","",""],["Game","","Game.html","","<p>This class contains actions that affect the overall state of the game.\n"],["GamesController","","GamesController.html","",""],["GamesHelper","","GamesHelper.html","",""],["King","","King.html","",""],["Knight","","Knight.html","",""],["Pawn","","Pawn.html","",""],["Piece","","Piece.html","","<p>This class contains actions affecting individual pieces. Class Piece\ndescribes actions relevant to all …\n"],["PiecesController","","PiecesController.html","",""],["PiecesHelper","","PiecesHelper.html","",""],["Queen","","Queen.html","",""],["Rook","","Rook.html","",""],["User","","User.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["can_castle?","King","King.html#method-i-can_castle-3F","(x_destination, y_destination)",""],["castling","King","King.html#method-i-castling","(x_destination, y_destination)",""],["check_path","Piece","Piece.html#method-i-check_path","(x1, y1, x2, y2)",""],["create","GamesController","GamesController.html#method-i-create","()",""],["in_check?","Game","Game.html#method-i-in_check-3F","(current_color)","<p>This method determines whether player of a given color is in a state of\ncheck.\n<p><strong>Args</strong>    :\n<p><code>current_color</code> …\n"],["index","ChessboardsController","ChessboardsController.html#method-i-index","()",""],["king_valid_move_for_in_check?","King","King.html#method-i-king_valid_move_for_in_check-3F","(x_destination, y_destination)",""],["move_to!","Piece","Piece.html#method-i-move_to-21","(new_x, new_y)","<p>This method implements capturing a piece.\n<p><strong>Args</strong>    :\n<p>+new_x, new_y+ -&gt; x and y coordinates of the piece&#39;s …\n"],["new","GamesController","GamesController.html#method-i-new","()",""],["obstructed?","Piece","Piece.html#method-i-obstructed-3F","(destination)","<p>This method determines whether the path between instance piece and\ndestination is obstructed by another …\n"],["occupied?","Piece","Piece.html#method-i-occupied-3F","(x, y)","<p>This method checks whether a piece is present at (x, y).\n<p><strong>Args</strong>    :\n<p>+x, y+ -&gt; x and y coordinates of …\n"],["piece_class","PiecesHelper","PiecesHelper.html#method-i-piece_class","(selected_piece, current_piece)",""],["populate_board!","Game","Game.html#method-i-populate_board-21","()","<p>This method populates the board with pieces after a new game is created.\n<p><strong>Args</strong>    : none\n<p><strong>Returns</strong> : chess …\n"],["show","GamesController","GamesController.html#method-i-show","()",""],["show","PiecesController","PiecesController.html#method-i-show","()",""],["show","UsersController","UsersController.html#method-i-show","()",""],["update","GamesController","GamesController.html#method-i-update","()",""],["update","PiecesController","PiecesController.html#method-i-update","()",""],["valid_move?","Bishop","Bishop.html#method-i-valid_move-3F","(x_destination, y_destination)",""],["valid_move?","King","King.html#method-i-valid_move-3F","(x_destination, y_destination)",""],["valid_move?","Knight","Knight.html#method-i-valid_move-3F","(x_destination, y_destination)",""],["valid_move?","Pawn","Pawn.html#method-i-valid_move-3F","(x_destination, y_destination)",""],["valid_move?","Queen","Queen.html#method-i-valid_move-3F","(x_destination, y_destination)",""],["valid_move?","Rook","Rook.html#method-i-valid_move-3F","(x_destination, y_destination)",""],["README","","README_rdoc.html","","<p>README\n<p>StormyKnights Chess\n<p>This is a chess app built in Ruby on Rails for The Firehose Project.\n"]]}}